import threading
import datetime
import aiohttp
import asyncio
import aiogram
import logging
import time
import json
import pytz
import io
import os

from io import BytesIO
from PIL import Image
from config.Config import TG_BOT_TOKEN
from config.Config import CHANNEL_ID
from config.Config import SERVER_CRT, SERVER_KEY
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.utils.markdown import hlink
from aiogram import Bot, Dispatcher, types
from aiogram import executor
from aiogram.types import InputMediaAudio
from aiogram.types import CallbackQuery
from aiogram.types import ParseMode
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types.message import ContentType
from commands.Commands import on_startup
from markups.Markups import *
from dispatcher.Dispatcher import dp
from dispatcher.Dispatcher import bot
from handlers.Handlers import *
from datetime import timedelta
from database.db import db


logging.basicConfig(level=logging.INFO)


@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        if not await db.user_exists(user_id):
            await db.add_user(user_id)
        await db.delete_history(user_id)
        await bot.send_message(message.chat.id, """–ü—Ä–∏–≤–µ—Ç! ü§ñüëã

–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ ChatGPT 3.5, ChatGPT 4 –∏ DALL-E 3 –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏: GPT-4 Turbo, DALL-E 3, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ GPT-4 –∏ GPT 3.5 Turbo.

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∞–º—ã–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏:

üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤.
üíª –ù–∞–ø–∏—Å–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞.
üåê –ü–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞.
üß† –ê–Ω–∞–ª–∏–∑ –∏ –∫—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
üí¨ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.
üé® –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏—è–º.
üåç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

<b>‚úâÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç (–≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å GPT –≤ /settings).</b>

<b>ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã  - /info</b>
<b>üîêü§ñ–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω—Ü–∏–∏ –±–æ—Ç–∞ + –≥–∞–π–¥ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é - /help</b>

<b>üì∑ –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /img –∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å.</b>
  –ü—Ä–∏–º–µ—Ä: /img –ë–µ–ª—ã–π –ø—É—à–∏—Å—Ç—ã–π –∫–æ—Ç.
   –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –æ–Ω –º–æ–∂–µ—Ç –µ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤ –∞–Ω–∏–º–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç, —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ —Ñ–æ—Ç–æ. 

‚ùï–ï—Å–ª–∏ –±–æ—Ç –≤–∞–º –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /start

–£–¥–∞—á–∏! üöÄ‚ú®""", parse_mode="HTML", reply_markup=await main_kb(), disable_web_page_preview=True)
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(commands=['help'])
async def command_help(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        await bot.send_message(message.chat.id, """<b>üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤</b>
–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ —á–∞—Ç –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ–¥–ø–∏—Å–∫–æ–π /premium –º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã.

<b>/settings</b> ‚Äì –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ GPT
<b>/GPTprompts</b> ‚Äì —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è GPT
<b>/faq</b> ‚Äì —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ GPT –∏ –±–æ—Ç—É
<b>/help</b> - –ø–æ–º–æ—â—å

‚Ü©Ô∏è –ï—Å–ª–∏ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ —Ä–µ–ø–æ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –±–æ—Ç–∞ —Å –¥—Ä—É–≥–∏—Ö –∫–∞–Ω–∞–ª–æ–≤/—á–∞—Ç–æ–≤ ‚Äî –æ–Ω —Å–º–æ–∂–µ—Ç –æ–∑–≤—É—á–∏—Ç—å –∏—Ö, –∏–∑–ª–æ–∂–∏—Ç—å —Å—É—Ç—å, –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å, –Ω–∞–ø–∏—Å–∞—Ç—å —Å—Ç–∞—Ç—å–∏ –Ω–∞ –∏—Ö –æ—Å–Ω–æ–≤–µ, –∏–∑–ª–æ–∂–∏—Ç—å —Ç–µ–∑–∏—Å–Ω–æ, –ª–∏–±–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –í–∞—à–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ.

<b>üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞</b>
–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –±–æ—Ç –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç. –¢.–µ. –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –æ—Ç–≤–µ—Ç–∞ —É—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –≤–∞—à —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å, –Ω–æ –∏ —Å–≤–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥ –∏ –∑–∞–¥–∞–≤–∞—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ –±–µ–∑ —É—á–µ—Ç–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /deletecontext. –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–æ–∂–Ω–æ –≤—ã–∫–ª—é—á–∏—Ç—å –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–º–∞–Ω–¥–æ–π /settings

üë®‚Äçüë®‚Äçüëß‚Äçüë¶ –ë–æ—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—ã (–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Ç–∞—Ä–∏—Ñ–∞—Ö¬† üöÄ Premium –∏ –≤—ã—à–µ). –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –µ–º—É –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /ask "–≤–∞—à –∑–∞–ø—Ä–æ—Å" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/ask —Ä–∞—Å—Å–∫–∞–∂–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Å–º–æ—Å–µ").


<b>üåÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</b>
–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –±–æ—Ç–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π Midjourney, Stable Diffusion –∏ DALL-E. –î–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø–æ–¥–ø–∏—Å–∫–æ–π /premium –∏–ª–∏ –≤ —Ä–∞–º–∫–∞—Ö –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞.

<b>/img</b> + <b>–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</b> ‚Äì¬† –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é Midjourney, Stable Diffusion –∏ DALL-E 3
<b>/Midjourney</b> ‚Äì –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å Midjourney
<b>/StableDiffusion</b> ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å Stable Diffusion
<b>/Dalle</b> ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å DALL-E
<b>/midprompts</b> ‚Äì –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Midjourney —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏: –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –º–µ–Ω—è—Ç—å –≤–µ—Ä—Å–∏–∏, –∑–∞–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –¥—Ä.
<b>/sdprompts</b> - –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ Stable Diffusion —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏: –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –º–µ–Ω—è—Ç—å –≤–µ—Ä—Å–∏–∏, –∑–∞–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –¥—Ä.
<b>/Dalleprompts</b> - –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ DALL-E —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏: –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –º–µ–Ω—è—Ç—å –≤–µ—Ä—Å–∏–∏, –∑–∞–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –¥—Ä.

üì∑ –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –æ–Ω –º–æ–∂–µ—Ç –µ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤ –∞–Ω–∏–º–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç, —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ —Ñ–æ—Ç–æ. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –±–æ—Ç—É –∏ –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ –Ω–µ–º—É —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–¥–∞–Ω–∏–µ ‚Äî –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç GPT-4 Vision.

<b>‚öôÔ∏è –î—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã</b>
<b>/start</b> - –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
<b>/profile</b> ‚Äì –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å, –∑–∞–ø—Ä–æ—Å—ã  –∏ –±–∞–ª–∞–Ω—Å
<b>/premium</b> ‚Äì –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∏ GPT, DALL-E , Midjourney, Stable Diffusion

""", parse_mode="HTML", reply_to_message_id=message.message_id)
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(commands=['info'])
async def command_info(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
         await bot.send_message(message.chat.id, """
–ü—Ä–∏–≤–µ—Ç! ü§ñüëã

–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ ChatGPT 3.5, ChatGPT 4 –∏ DALL-E 3 –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏: GPT-4 Turbo, DALL-E 3, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ GPT-4 –∏ GPT 3.5 Turbo.

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∞–º—ã–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏:

üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤.
üíª –ù–∞–ø–∏—Å–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞.
üåê –ü–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞.
üß† –ê–Ω–∞–ª–∏–∑ –∏ –∫—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
üí¨ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.
üé® –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏—è–º.
üåç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

‚úâÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç (–≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å GPT –≤ /settings).

ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start ‚Äî <i>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞</i>
/profile ‚Äî <i>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</i>
/premium ‚Äî <i>–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É</i>
/personality ‚Äî <i>–í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å GPT</i>
/deletecontext ‚Äî <i>–û–±–Ω—É–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã</i>
/gptprompts ‚Äì <i>—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è</i> <b>GPT</b>
/dalleprompts - <i>—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º—Ç–æ–≤ –¥–ª—è</i> <b>DALL-E</b>
/settings ‚Äî <i>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</i>
/img (–æ–ø–∏—Å–∞–Ω–∏–µ) ‚Äî <i>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é (–ø—Ä–∏–º–µ—Ä: /img –¥–æ–º –≤–æ–∑–ª–µ –º–æ—Ä—è)</i>
/info ‚Äî <i>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∫–æ–º–∞–Ω–¥—ã</i>
/help ‚Äî <i>–ü–æ–º–æ—â—å</i>
/terms - <i>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i>

üì∑ –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –æ–Ω –º–æ–∂–µ—Ç –µ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤ –∞–Ω–∏–º–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç, —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ —Ñ–æ—Ç–æ.

üë®‚Äçüë®‚Äçüëß‚Äçüë¶ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö (–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Ç–∞—Ä–∏—Ñ–µ Premium). –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –µ–º—É –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /ask "–≤–∞—à –∑–∞–ø—Ä–æ—Å" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/ask —Ä–∞—Å—Å–∫–∞–∂–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Å–º–æ—Å–µ").

‚ùï–ï—Å–ª–∏ –±–æ—Ç –≤–∞–º –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /start

–£–¥–∞—á–∏! üöÄ‚ú®""", parse_mode="HTML", disable_web_page_preview=True)
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(commands=['settings'])
async def command_voice(message: types.Message):
    user_id = message.chat.id
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        db_context = await db.get_user_info(user_id, "context")
        db_voice = await db.get_user_info(user_id, "voice")
        db_context = db_context[0]
        db_voice = db_voice[0]
        await bot.send_message(message.chat.id, """–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:

1. –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å <b>GPT</b>
2. –í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å –¥–ª—è <b>ChatGPT</b>
3. –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ö–æ–≥–¥–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª—é—á–µ–Ω, –±–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç —Å–≤–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –≤—ã–±—Ä–∞—Ç—å –≥–æ–ª–æ—Å <b>GPT</b>
(–¥–æ—Å—Ç—É–ø–µ–Ω –≤ /premium)
""", parse_mode="HTML", reply_markup=await settings(db_context, db_voice))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(commands=['deletecontext'])
async def process_delete_context(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        await db.delete_history(user_id)
        await bot.send_message(message.chat.id, """<b>‚úÖ –í–∞—à –¥–∏–∞–ª–æ–≥ —Å–±—Ä–æ—à–µ–Ω</b>""", parse_mode="HTML")
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(commands=['terms'])
async def command_profile(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        textOffer =
        text–°onfidentiality =
        await bot.send_message(message.chat.id, f"1. {textOffer}\n\n2. {text–°onfidentiality}", parse_mode="Markdown", disable_web_page_preview=True)
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(commands=['gptprompts'])
async def command_profile(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        textGPTtutorial =
        await bot.send_message(message.chat.id, textGPTtutorial, parse_mode="Markdown")
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(commands=['dalleprompts'])
async def command_profile(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        textDALLEtutorial =
        await bot.send_message(message.chat.id, textDALLEtutorial, parse_mode="Markdown")
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


role_disc = {
"default": "<b>–û–±—ã—á–Ω—ã–π üîÅ</b> - —ç—Ç–æ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è –æ–±—â–µ–Ω–∏—è –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
"add": "<b>–†–µ–∫–ª–∞–º–Ω—ã–π –≠–∫—Å–ø–µ—Ä—Ç üì£</b> - —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ —É—Å–ª—É–≥ —Å –ø–æ–º–æ—â—å—é —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.",
"hack": "<b>–•–∞–∫—É—Ç—ã–π GPT üëÅ‚Äçüó®</b> - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∏—â–µ—Ç –Ω–æ–≤—ã–µ —Å–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞.",
"seo": "<b>CEO —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç üëî</b> - —ç—Ç–æ –±–∏–∑–Ω–µ—Å-—ç–∫—Å–ø–µ—Ä—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–µ–π –∏ —Ä–∞–∑–≤–∏—Ç–∏—è –±–∏–∑–Ω–µ—Å-—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.",
"psicho": "<b>–ü—Å–∏—Ö–æ–ª–æ–≥ üßò‚Äç‚ôÄ</b>Ô∏è - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ–º–æ—â–∏ –ª—é–¥—è–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –∏—Ö –ø—Ä–æ–±–ª–µ–º.",
"fullstack": "<b>Fullstack –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ üíª</b> - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.",
"codegen": "<b>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ö–æ–¥–∞ üí°</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
"tech": "<b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ üìö</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–∞—Ö –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö, –∞ —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –≤ —Ä–µ—à–µ–Ω–∏–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º.",
"repeater": "<b>–†–µ–ø–µ—Ç–∏—Ç–æ—Ä üéì</b> - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —á–∞—Ç GPT –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏      —à–∫–æ–ª—å–Ω–∏–∫–æ–≤ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞—Ö –∏ –Ω–∞–≤—ã–∫–∞—Ö.",
"news": "<b>–ù–æ–≤–æ—Å—Ç–Ω–æ–π –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä üåê</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ —Å–æ–±—ã—Ç–∏—è –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.",
"textred": "<b>–†–µ–¥–∞–∫—Ç–æ—Ä –¢–µ–∫—Å—Ç–∞ üìù</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ–º, –≥—Ä–∞–º–º–∞—Ç–∏–∫–æ–π –∏ —Å—Ç–∏–ª–µ–º –ø–∏—Å—å–º–∞.",
"creative": "<b>–ü–∏—Å–∞—Ç–µ–ª—å –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã—Ö –°—Ç–∞—Ç–µ–π ‚úç</b>Ô∏è - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –±–ª–æ–≥–æ–≤, —Å–∞–π—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π.",
"finance": "<b>–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç üí∞</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –≤–æ–ø—Ä–æ—Å–∞–º, —Ç–∞–∫–∏–º –∫–∞–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞ –∏ —Ç.–¥.",
"twowords": "<b>–ö—Ä–∞—Ç–∫–æ ‚è©</b> - —ç—Ç–æ —á–∞—Ç GPT, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ –ª—é–±–æ–π —Ç–µ–º–µ –∏–ª–∏ –∑–∞–ø—Ä–æ—Å—É.",
}


@dp.message_handler(commands=['personality'])
async def command_personality(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        role = await db.get_user_info(user_id, "role_preview")
        role = role[0]
        if role in role_disc:
            text_role = role_disc[role]
            await bot.send_message(message.chat.id, f"""<b>üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è GPT:</b>\n\n{text_role}""", parse_mode="HTML", reply_to_message_id=message.message_id, reply_markup=await roles(None, role, None))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


role_for_profile = {
        "default": "–û–±—ã—á–Ω—ã–π üîÅ",
        "add": "–†–µ–∫–ª–∞–º–Ω—ã–π –≠–∫—Å–ø–µ—Ä—Ç üì£",
        "hack": "–•–∞–∫–Ω—É—Ç—ã–π GPT üëÅ‚Äçüó®",
        "seo": "CEO —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç üëî",
        "psicho": "–ü—Å–∏—Ö–æ–ª–æ–≥ üßò‚Äç",
        "fullstack": "Fullstack –†–∞–∑—Ä–∞–±-–∏–∫ üíª",
        "codegen": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ö–æ–¥–∞ üí°",
        "tech": "–¢–µ—Ö–Ω-–∏–π –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ üìö",
        "repeater": "–†–µ–ø–µ—Ç–∏—Ç–æ—Ä üéì",
        "news": "–ù–æ–≤–æ—Å—Ç–Ω–æ–π –ê–≥—Ä–µ–≥–∞—Ç–æ—Ä üåê",
        "textred": "–†–µ–¥–∞–∫—Ç–æ—Ä –¢–µ–∫—Å—Ç–∞ üìù",
        "creative": "–ü–∏—Å–∞—Ç–µ–ª—å –°—Ç–∞—Ç–µ–π ‚úçÔ∏è",
        "finance": "–§–∏–Ω–∞–Ω-—ã–π –ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç üí∞",
        "twowords": "–ö—Ä–∞—Ç–∫–æ ‚è©",
    }

sub_for_profile = {
        "free": "üÜì Free",
        "mini": "üëÅ‚Äçüó® Mini",
        "starter": "üëå Starter",
        "premium": "üöÄ Premium",
        "ultra": "üî• Ultra",
        "maximum": "üíØ MAXIMUM",
    }


@dp.message_handler(commands=['profile'])
async def command_profile(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        await check_user_sub(user_id)
        request_gpt_3 = await db.get_user_info(user_id, "request_gpt_3")
        request_gpt_4 = await db.get_user_info(user_id, "request_gpt_4")
        request_dalle = await db.get_user_info(user_id, "request_dalle")
        selected_model = await db.get_user_info(user_id, "selected_model")
        user_sub = time_sub_day(await db.get_time(user_id, "sub_time"))
        role = await db.get_user_info(user_id, "role_preview")
        context = await db.get_user_info(user_id, "context")
        voice = await db.get_user_info(user_id, "voice")
        sub = await db.get_user_info(user_id, "sub")
        selected_model = selected_model[0]
        request_gpt_3 = request_gpt_3[0]
        request_gpt_4 = request_gpt_4[0]
        request_dalle = request_dalle[0]
        context = context[0]
        voice = voice[0]
        role = role[0]
        sub = sub[0]

        moscow_tz = pytz.timezone('Europe/Moscow')
        now = datetime.datetime.now(moscow_tz)
        next_midnight = (now + timedelta(days=1)).replace(hour=0, minute=0, second=0, microsecond=0)
        time_difference = next_midnight - now
        hours, remainder = divmod(time_difference.seconds, 3600)
        minutes, _ = divmod(remainder, 60)

        if user_sub == False:
            user_sub = "-"
        if request_gpt_3 < 0:
            request_gpt_3 = "‚àû"
        if request_gpt_4 < 0:
            request_gpt_4 = "‚àû"
        if request_dalle < 0:
            request_dalle = "‚àû"
        if context == "on":
            context = "‚úÖ –í–∫–ª"
        elif context == "off":
            context = "‚ùå –í—ã–∫–ª"
        if voice == "on":
            voice = "‚úÖ –í–∫–ª"
        elif voice == "off":
            voice = "‚ùå –í—ã–∫–ª"
        if sub in sub_for_profile:
            sub = sub_for_profile[sub]
        if role in role_for_profile:
            role = role_for_profile[role]

        await bot.send_message(message.chat.id, f"""<b>üë®‚Äçüíª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>
<b>‚îú –í–∞—à ID:</b> {message.from_user.id}
<b>‚îú üí≥ –ü–æ–¥–ø–∏—Å–∫–∞:</b> <b>{sub}</b>
<b>‚îú ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å:</b> {selected_model}
<b>‚îú üìÜ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {user_sub}
<b>‚îú üí≠ GPT 3.5 –∑–∞–ø—Ä–æ—Å—ã (24 —á):</b> {request_gpt_3}
<b>‚îú üí≠ GPT 4.0 –∑–∞–ø—Ä–æ—Å—ã (24 —á):</b> {request_gpt_4}
<b>‚îú üñº Ô∏è–ö–∞—Ä—Ç–∏–Ω–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å (24 —á):</b> {request_dalle}
<b>‚îú üé≠ GPT-–†–æ–ª—å:</b> {role}
<b>‚îú üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç:</b> {context}
<b>‚îú üîâ –ì–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç:</b> {voice}

<i>–õ–∏–º–∏—Ç –æ–±–Ω–æ–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑: {hours} —á. {minutes} –º–∏–Ω.</i>

<b>üöÄ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ?</b>
–ü–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ—Ö –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥–æ–π /premium –∏ –æ—Ç–∫—Ä–æ–π –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —á–∞—Ç-–±–æ—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏""", parse_mode="HTML")
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(commands=['premium'])
async def command_premium(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        await bot.send_message(message.chat.id, """ü§ñ –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –≤ 20 –∑–∞–ø—Ä–æ—Å–æ–≤ (GPT 3.5) –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ 1 –∑–∞–ø—Ä–æ—Å –≤ –¥–µ–Ω—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –≤–∞—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞.

üí† –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –±–æ–ª–µ–µ –º–æ—â–Ω–∞—è –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ <b>GPT-4</b> –∏ <b>GPT-4 Turbo</b>? –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫, –≤–∫–ª—é—á–∞—é—â–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã, –ª–∏–±–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–¥–µ–ª—å–Ω–æ:

üëÅ‚Äçüó® <b>Mini</b>
‚Äî GPT 3.5 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî GPT 4 ‚Äî 10 —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–µ–Ω—å
‚Äî 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç—å Dalle –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üëå <b>Starter:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 30 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle  –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö2 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üöÄ <b>Premium:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 50 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ: —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–æ—Ç–æ, —Ä–µ—à–µ–Ω–∏–µ –ª—é–±—ã—Ö –∑–∞–¥–∞—á –∏ —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤, –ª—é–±—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–∞ —Ñ–æ—Ç–æ.
‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–º
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –ü–æ–º–Ω–∏—Ç –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö3 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üî• <b>Ultra:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 100 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –±–æ—Ç—É —Å–≤–æ—é –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö4 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö
‚Äî –î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è–º –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤/–Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
‚Äî –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Premium –ø–ª–∞–Ω–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üíØ <b>MAXIMUM</b>
‚Äî –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏.
‚Äî –í—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±—ã—Ö –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞
‚Äî –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—à–ª—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫

<i>–§—É–Ω–∫—Ü–∏–∏ /Midjourney, /StableDiffusion, /ask, GPT 4 Vision,  —Ä–µ–¥–∞–∫—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.</i>""", parse_mode="HTML", reply_markup=await create_premium_buttons("monthly", "–º–µ—Å", 400, 700, 1200, 1700, 3900, "monthly"))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(regexp="üë§–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def process_profile(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        moscow_tz = pytz.timezone('Europe/Moscow')
        now = datetime.datetime.now(moscow_tz)
        next_midnight = (now + timedelta(days=1)).replace(hour=0, minute=0, second=0, microsecond=0)
        time_difference = next_midnight - now
        hours, remainder = divmod(time_difference.seconds, 3600)
        minutes, _ = divmod(remainder, 60)
        user_id = message.chat.id
        await check_user_sub(user_id)
        request_gpt_3 = await db.get_user_info(user_id, "request_gpt_3")
        request_gpt_4 = await db.get_user_info(user_id, "request_gpt_4")
        request_dalle = await db.get_user_info(user_id, "request_dalle")
        role = await db.get_user_info(user_id, "role_preview")
        voice = await db.get_user_info(user_id, "voice")
        context = await db.get_user_info(user_id, "context")
        selected_model = await db.get_user_info(user_id, "selected_model")
        sub = await db.get_user_info(user_id, "sub")
        sub = sub[0]
        user_sub = time_sub_day(await db.get_time(user_id, "sub_time"))
        if user_sub == None:
            user_sub = "-"
        request_gpt_3 = request_gpt_3[0]
        request_gpt_4 = request_gpt_4[0]
        request_dalle = request_dalle[0]
        if request_gpt_3 < 0:
            request_gpt_3 = "‚àû"
        if request_gpt_4 < 0:
            request_gpt_4 = "‚àû"
        if request_dalle < 0:
            request_dalle = "‚àû"
        context = context[0]
        if context == "on":
            context = "‚úÖ –í–∫–ª"
        elif context == "off":
            context = "‚ùå –í—ã–∫–ª"
        voice = voice[0]
        if voice == "on":
            voice = "‚úÖ –í–∫–ª"
        elif voice == "off":
            voice = "‚ùå –í—ã–∫–ª"
        role = role[0]
        if sub in sub_for_profile:
            sub = sub_for_profile[sub]
        if role in role_for_profile:
            role = role_for_profile[role]
        await bot.send_message(message.chat.id, f"""<b>üë®‚Äçüíª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>
<b>‚îú –í–∞—à ID:</b> {message.from_user.id}
<b>‚îú üí≥ –ü–æ–¥–ø–∏—Å–∫–∞:</b> <b>{sub}</b>
<b>‚îú ü§ñ –ù–µ–π—Ä–æ—Å–µ—Ç—å:</b> {selected_model[0]}
<b>‚îú üìÜ –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {user_sub}
<b>‚îú üí≠ GPT 3.5 –∑–∞–ø—Ä–æ—Å—ã (24 —á):</b> {request_gpt_3}
<b>‚îú üí≠ GPT 4.0 –∑–∞–ø—Ä–æ—Å—ã (24 —á):</b> {request_gpt_4}
<b>‚îú üñº Ô∏è–ö–∞—Ä—Ç–∏–Ω–æ–∫ –æ—Å—Ç–∞–ª–æ—Å—å (24 —á):</b> {request_dalle}
<b>‚îú üé≠ GPT-–†–æ–ª—å:</b> {role}
<b>‚îú üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç:</b> {context}
<b>‚îú üîâ –ì–æ–ª–æ—Å–æ–≤–æ–π –æ—Ç–≤–µ—Ç:</b> {voice}

<i>–õ–∏–º–∏—Ç –æ–±–Ω–æ–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑: {hours} —á. {minutes} –º–∏–Ω.</i>

<b>üöÄ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ?</b>
–ü–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ —Ç—Ä–µ—Ö –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥–æ–π /premium –∏ –æ—Ç–∫—Ä–æ–π –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —á–∞—Ç-–±–æ—Ç–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ª–∏–º–∏—Ç–∞–º–∏""", parse_mode="HTML")
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(regexp="üé≠GPT - –†–æ–ª–∏")
async def process_role(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        role = await db.get_user_info(user_id, "role_preview")
        role = role[0]
        if role in role_disc:
            text_role = role_disc[role]
            await bot.send_message(message.chat.id, f"""<b>üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è GPT:</b>\n\n{text_role}""", parse_mode="HTML", reply_markup=await roles(None, role, None))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(regexp="üöÄ–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞")
async def process_premium(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        await bot.send_message(message.chat.id, """ü§ñ –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –≤ 20 –∑–∞–ø—Ä–æ—Å–æ–≤ (GPT 3.5) –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ 1 –∑–∞–ø—Ä–æ—Å –≤ –¥–µ–Ω—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –≤–∞—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞.

üí† –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –±–æ–ª–µ–µ –º–æ—â–Ω–∞—è –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ <b>GPT-4</b> –∏ <b>GPT-4 Turbo</b>? –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫, –≤–∫–ª—é—á–∞—é—â–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã, –ª–∏–±–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–¥–µ–ª—å–Ω–æ:

üëÅ‚Äçüó® <b>Mini</b>
‚Äî GPT 3.5 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî GPT 4 ‚Äî 10 —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–µ–Ω—å
‚Äî 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç—å Dalle –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üëå <b>Starter:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 30 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle  –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞ (15 –≤–∏–¥–æ–≤)
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö2 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üöÄ <b>Premium:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 50 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ: —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–æ—Ç–æ, —Ä–µ—à–µ–Ω–∏–µ –ª—é–±—ã—Ö –∑–∞–¥–∞—á –∏ —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤, –ª—é–±—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–∞ —Ñ–æ—Ç–æ.
‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–º
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞ (50 –≤–∏–¥–æ–≤)
‚Äî –ü–æ–º–Ω–∏—Ç –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö3 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üî• <b>Ultra:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 100 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –±–æ—Ç—É —Å–≤–æ—é –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö4 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö
‚Äî –î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è–º –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤/–Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
‚Äî –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Premium –ø–ª–∞–Ω–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üíØ <b>MAXIMUM</b>
‚Äî –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏.
‚Äî –í—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±—ã—Ö –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞
‚Äî –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—à–ª—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫

<i>–§—É–Ω–∫—Ü–∏–∏ /Midjourney, /StableDiffusion, /ask, GPT 4 Vision, —Ä–µ–¥–∞–∫—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.</i>""", parse_mode="HTML", reply_markup=await create_premium_buttons("monthly", "–º–µ—Å", 400, 700, 1200, 1700, 3900, "monthly"))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.message_handler(regexp="‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
async def process_gpt(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        db_context = await db.get_user_info(user_id, "context")
        db_voice = await db.get_user_info(user_id, "voice")
        db_context = db_context[0]
        db_voice = db_voice[0]
        await bot.send_message(message.chat.id, """–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:

1. –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å <b>GPT</b>
2. –í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å –¥–ª—è <b>ChatGPT</b>
3. –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ö–æ–≥–¥–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª—é—á–µ–Ω, –±–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç —Å–≤–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –≤—ã–±—Ä–∞—Ç—å –≥–æ–ª–æ—Å <b>GPT</b>
(–¥–æ—Å—Ç—É–ø–µ–Ω –≤ /premium)
""", parse_mode="HTML", reply_markup=await settings(db_context, db_voice))
    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


@dp.callback_query_handler(lambda call: call.data == "back_premium_call")
async def change_to_monthly(call: types.CallbackQuery):
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = """ü§ñ –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç –≤ 20 –∑–∞–ø—Ä–æ—Å–æ–≤ (GPT 3.5) –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ 1 –∑–∞–ø—Ä–æ—Å –≤ –¥–µ–Ω—å –Ω–∞ —Ä–∞–±–æ—Ç—É —Å –≤–∞—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞.

üí† –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∑–∞–ø—Ä–æ—Å–æ–≤ –∏ –±–æ–ª–µ–µ –º–æ—â–Ω–∞—è –∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è –±–æ—Ç–∞ <b>GPT-4</b> –∏ <b>GPT-4 Turbo</b>? –¢–æ–≥–¥–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫, –≤–∫–ª—é—á–∞—é—â–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã, –ª–∏–±–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –æ—Ç–¥–µ–ª—å–Ω–æ:

üëÅ‚Äçüó® <b>Mini</b>
‚Äî GPT 3.5 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî GPT 4 ‚Äî 10 —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –¥–µ–Ω—å
‚Äî 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç—å Dalle –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üëå <b>Starter:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 30 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 25 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ñ–æ—Ç–æ
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle  –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö2 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üöÄ <b>Premium:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 50 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 50 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∏–º–µ –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –†–µ–¥–∞–∫—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò
‚Äî –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ: —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–æ—Ç–æ, —Ä–µ—à–µ–Ω–∏–µ –ª—é–±—ã—Ö –∑–∞–¥–∞—á –∏ —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤, –ª—é–±—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–∞ —Ñ–æ—Ç–æ.
‚Äî –ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ä–µ–∂–∏–º –æ—Ç–≤–µ—Ç–∞ –≥–æ–ª–æ—Å–æ–º
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –ü–æ–º–Ω–∏—Ç –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö3 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üî• <b>Ultra:</b>
‚Äî GPT 3.5 ‚Äî –±–µ–∑–ª–∏–º–∏—Ç–Ω–æ
‚Äî GPT 4 ‚Äî 100 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 100 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –¥–µ–Ω—å
‚Äî 9 –º–æ–¥–µ–ª–µ–π GPT, –≤–∫–ª—é—á–∞—è GPT 4 Turbo
‚Äî –ó—Ä–µ–Ω–∏–µ GPT 4 Vision
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –ù–µ–π—Ä–æ—Å–µ—Ç–∏ /Midjourney, /StableDiffusion –∏ Dalle 3 –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–±—Ä–∞—Ç—å GPT –ª–∏—á–Ω–æ—Å—Ç—å –¥–ª—è –±–æ—Ç–∞
‚Äî –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å –±–æ—Ç—É —Å–≤–æ—é –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
‚Äî –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ö4 –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –¥–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
‚Äî –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞ –∫ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö
‚Äî –î–æ—Å—Ç—É–ø –∫ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—è–º –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤/–Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π
‚Äî –í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Premium –ø–ª–∞–Ω–∞
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞

üíØ <b>MAXIMUM</b>
‚Äî –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏.
‚Äî –í—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π.
‚Äî –†–∞–±–æ—Ç–∞–µ—Ç –≤ –ª—é–±—ã—Ö –≥—Ä—É–ø–ø–∞—Ö Telegram
‚Äî –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–ª–∞–º–∞
‚Äî –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ—à–ª—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫

<i>–§—É–Ω–∫—Ü–∏–∏ /Midjourney, /StableDiffusion, /ask, GPT 4 Vision, —Ä–µ–¥–∞–∫—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.</i>""", parse_mode="HTML", reply_markup=await create_premium_buttons("monthly", "–º–µ—Å", 400, 700, 1200, 1700, 3900, "monthly"))


@dp.callback_query_handler(lambda call: call.data == "sub_monthly")
async def change_to_monthly(call: types.CallbackQuery):
    try:
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await create_premium_buttons("monthly", "–º–µ—Å", 400, 700, 1200, 1700, 3900, "monthly"))
    except Exception as e:
        pass

@dp.callback_query_handler(lambda call: call.data == "sub_half_annual")
async def change_to_weekly(call: types.CallbackQuery):
    try:
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await create_premium_buttons("half_annual", "–ø–æ–ª–≥–æ–¥", 1800, 3900, 7000, 9500, 22000, "half_annual"))
    except Exception as e:
        pass

@dp.callback_query_handler(lambda call: call.data == "sub_annual")
async def change_to_annual(call: types.CallbackQuery):
    try:
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await create_premium_buttons("annual", "–≥–æ–¥", 3400, 7600, 13000, 18000, 42000, "annual"))
    except Exception as e:
        pass

policy_rules =

public_rules =


@dp.callback_query_handler(lambda call: call.data == "maximum_half_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–ª—É–≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Maximum –∑–∞ ‚ÇΩ22000.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_maximum_half_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "maximum_monthly")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –º–µ—Å—è—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ Maximum –∑–∞ ‚ÇΩ3900.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_maximum_monthly_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "maximum_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Maximum –∑–∞ ‚ÇΩ42000.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_maximum_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "starter_half_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–ª—É–≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Starter –∑–∞ ‚ÇΩ3900.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_starter_half_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "mini_half_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–ª—É–≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Mini –∑–∞ ‚ÇΩ1800.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_mini_half_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "mini_monthly")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –º–µ—Å—è—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ Mini –∑–∞ ‚ÇΩ400.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_mini_monthly_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "mini_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Mini –∑–∞ ‚ÇΩ3400.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_mini_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "premium_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Premium –∑–∞ ‚ÇΩ13000.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_premium_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "premium_monthly")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –º–µ—Å—è—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ Premium –∑–∞ ‚ÇΩ1200.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_premium_monthly_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "starter_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Starter –∑–∞ ‚ÇΩ7600.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_starter_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "starter_monthly")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –º–µ—Å—è—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ Starter –∑–∞ ‚ÇΩ700.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_starter_monthly_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "ultra_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Ultra –∑–∞ ‚ÇΩ18000.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_ultra_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "ultra_monthly")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –º–µ—Å—è—á–Ω—ã–π —Ç–∞—Ä–∏—Ñ Ultra –∑–∞ ‚ÇΩ1700.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_ultra_monthly_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "premium_half_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–ª—É–≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Premium –∑–∞ ‚ÇΩ7000.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_premium_half_annual_keyboard(user_id))

@dp.callback_query_handler(lambda call: call.data == "ultra_half_annual")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""üí≥–í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ø–æ–ª—É–≥–æ–¥–æ–≤–æ–π —Ç–∞—Ä–∏—Ñ Ultra –∑–∞ ‚ÇΩ9500.

üî∑–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ —Å–ø–∏—Å–∞–Ω–∏—è, –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è {public_rules} –∏ {policy_rules}.""", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=await buy_ultra_half_annual_keyboard(user_id))


@dp.callback_query_handler(lambda call: call.data == "change_gpt_model_call")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await check_user_sub(user_id)
    sub = await db.get_user_info(user_id, "sub")
    sub = sub[0]
    selected_model = await db.get_user_info(user_id, "selected_model")
    selected_model = selected_model[0]
    await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = """–í –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã 9 –º–æ–¥–µ–ª–µ–π ü§ñ Chat GPT:

<b>‚úÖ gpt-3.5-turbo:</b> –≠—Ç–æ –º–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ GPT-3.5 Turbo –æ—Ç OpenAI, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–∞—è –¥–ª—è —á–∞—Ç-–±–æ—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –≥–¥–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ-–∑–∞–≤–∏—Å–∏–º–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —è–∑—ã–∫–∞.

<b>‚úÖ gpt-3.5-turbo-1106:</b> –≠—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è chat gpt gpt-3.5-turbo, –≤—ã–ø—É—â–µ–Ω–Ω–∞—è 6 –Ω–æ—è–±—Ä—è. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏, –Ω–æ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏.

<b>‚úÖ gpt-3.5-turbo-0613:</b> –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –µ—â–µ –æ–¥–Ω—É –≤–µ—Ä—Å–∏—é chat gpt gpt-3.5turbo, –≤—ã–ø—É—â–µ–Ω–Ω—É—é 13 –∏—é–Ω—è.

<b>‚úÖ gpt-3.5-turbo-16k:</b> –≠—Ç–æ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ gpt-3.5-turbo, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–æ–ª—å—à–∏—Ö –æ–±—ä–µ–º–æ–≤ –¥–∞–Ω–Ω—ã—Ö. –≠—Ç–∞ –º–æ–¥–µ–ª—å –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –æ–±—ä–µ–º—ã —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

<b>‚úÖ gpt-3.5-turbo-16k-0613:</b> –≠—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏ gpt-3.5-turbo-16k, –≤—ã–ø—É—â–µ–Ω–Ω–∞—è 13 –∏—é–Ω—è. –û–Ω–∞ –æ–±–ª–∞–¥–∞–µ—Ç –≤—Å–µ–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –º–æ–¥–µ–ª–∏, –Ω–æ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —É–ª—É—á—à–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, —Å–¥–µ–ª–∞–Ω–Ω—ã–µ –ø–æ –∏—Ç–æ–≥–∞–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏ –æ—Ç–∑—ã–≤–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.

<b>‚úÖ gpt-3.5-turbo-instruct:</b> –ú–æ–¥–µ–ª—å GPT-3.5 Turbo, –∫–æ—Ç–æ—Ä–∞—è –±—ã–ª–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –æ–±—É—á–µ–Ω–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.

<b>‚úÖ gpt-3_5-turbo-instruct-0914:</b> –≠—Ç–æ –≤–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏ gpt-3.5-turbo-instruct, –≤—ã–ø—É—â–µ–Ω–Ω–∞—è 14 —Å–µ–Ω—Ç—è–±—Ä—è. –†–∞–±–æ—Ç–∞–µ—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π.

<b>üî• gpt-4:</b> –ú–æ–¥–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è –æ—Ç OpenAI, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ GPT-3, –Ω–æ —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–ª—É—á—à–µ–Ω–∏—è–º–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–º–∏.

<b>üî• gpt-4-1106-preview:</b> –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ GPT-4, –≤—ã–ø—É—â–µ–Ω–Ω–æ–π 6 –Ω–æ—è–±—Ä—è.

<b>–í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ –º–æ–¥–µ–ª–∏ GPT 3.5.</b>

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫–æ–π –º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å —Ç–∞–∫–∂–µ –ª—é–±—ã–µ –º–æ–¥–µ–ª–∏ <b>GPT 4</b>. –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫—É /premium.
""", parse_mode="HTML", reply_markup=await gpt_s(selected_model, None))


@dp.callback_query_handler(lambda call: call.data == "context_on_call")
async def callback_buy(call: types.CallbackQuery):
    try:
        user_id = call.message.chat.id
        await db.set_context(user_id, "off")
        db_context = await db.get_user_info(user_id, "context")
        db_context = db_context[0]
        db_voice = await db.get_user_info(user_id, "voice")
        db_voice = db_voice[0]
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await settings(db_context, db_voice))
    except Exception as e:
        pass


@dp.callback_query_handler(lambda call: call.data == "context_off_call")
async def callback_buy(call: types.CallbackQuery):
    try:
        user_id = call.message.chat.id
        await db.set_context(user_id, "on")
        db_context = await db.get_user_info(user_id, "context")
        db_context = db_context[0]
        db_voice = await db.get_user_info(user_id, "voice")
        db_voice = db_voice[0]
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await settings(db_context, db_voice))
    except Exception as e:
        pass


@dp.callback_query_handler(lambda call: call.data == "voice_on_call")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await check_user_sub(user_id)
    sub = await db.get_user_info(user_id, "sub")
    sub = sub[0]

    if sub == "free" or sub == "starter" or sub == "mini":
        await bot.send_message(user_id, "‚ö†Ô∏è –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è /premium –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.")
    elif sub == "premium" or sub == "ultra" or sub == "maximum":
        await db.set_voice(user_id, "off")
        voice_model = await db.get_user_info(user_id, "voice_model")
        voice = await db.get_user_info(user_id, "voice")
        voice = voice[0]
        voice_model = voice_model[0]
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await choose_voice_model(voice_model, None, voice))


@dp.callback_query_handler(lambda call: call.data == "voice_off_call")
async def callback_buy(call: types.CallbackQuery):
    user_id = call.message.chat.id
    await check_user_sub(user_id)
    sub = await db.get_user_info(user_id, "sub")
    sub = sub[0]

    if sub == "free" or sub == "starter" or sub == "mini":
        await bot.send_message(user_id, "‚ö†Ô∏è –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è /premium –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.")
    elif sub == "premium" or sub == "ultra" or sub == "maximum":
        await db.set_voice(user_id, "on")
        voice_model = await db.get_user_info(user_id, "voice_model")
        voice = await db.get_user_info(user_id, "voice")
        voice = voice[0]
        voice_model = voice_model[0]
        await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await choose_voice_model(voice_model, None, voice))


@dp.callback_query_handler(lambda call: call.data == "check")
async def check_callback(call: types.CallbackQuery, state: FSMContext):
    await check(call)

async def check(call: types.CallbackQuery):
    chat_id = CHANNEL_ID
    user_id = call.message.chat.id
    chat_member = await bot.get_chat_member(chat_id=chat_id, user_id=call.message.chat.id)

    if (chat_member.status in ["member", "administrator", "creator"] and
            chat_member.status in ["member", "administrator", "creator"]):
        if not await db.user_exists(user_id):
            await db.add_user(user_id)
        await bot.send_message(call.message.chat.id, """
–ü—Ä–∏–≤–µ—Ç! ü§ñüëã

–ù–∞—à –±–æ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ ChatGPT 3.5, ChatGPT 4 –∏ DALL-E 3 –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –º–æ–¥–µ–ª–∏: GPT-4 Turbo, DALL-E 3, –∞ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ GPT-4 –∏ GPT 3.5 Turbo.

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–∞–º—ã–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏:

üìù –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤.
üíª –ù–∞–ø–∏—Å–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞.
üåê –ü–µ—Ä–µ–≤–æ–¥ —Å –ª—é–±–æ–≥–æ —è–∑—ã–∫–∞.
üß† –ê–Ω–∞–ª–∏–∑ –∏ –∫—Ä–∞—Ç–∫–æ–µ –∏–∑–ª–æ–∂–µ–Ω–∏–µ –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞.
üí¨ –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.
üé® –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∏ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –æ–ø–∏—Å–∞–Ω–∏—è–º.
üåç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ –Ω—É–∂–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

‚úâÔ∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç (–≤—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å GPT –≤ /settings).

ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/start ‚Äî <i>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞</i>
/profile ‚Äî <i>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</i>
/premium ‚Äî <i>–ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É</i>
/personality ‚Äî <i>–í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å GPT</i>
/deletecontext ‚Äî <i>–û–±–Ω—É–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Å–µ–¥—ã</i>
/gptprompts ‚Äì <i>—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è</i> <b>GPT</b>
/dalleprompts - <i>—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–º—Ç–æ–≤ –¥–ª—è</i> <b>DALL-E</b>
/settings ‚Äî <i>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</i>
/img (–æ–ø–∏—Å–∞–Ω–∏–µ) ‚Äî <i>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é (–ø—Ä–∏–º–µ—Ä: /img –¥–æ–º –≤–æ–∑–ª–µ –º–æ—Ä—è)</i>
/info ‚Äî <i>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∫–æ–º–∞–Ω–¥—ã</i>
/help ‚Äî <i>–ü–æ–º–æ—â—å</i>
/terms - <i>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</i>

üì∑ –ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –±–æ—Ç—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –æ–Ω –º–æ–∂–µ—Ç –µ–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –≤ –∞–Ω–∏–º–µ, —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç, —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ, –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ —Ñ–æ—Ç–æ.

üë®‚Äçüë®‚Äçüëß‚Äçüë¶ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≥—Ä—É–ø–ø–∞—Ö (–¥–æ—Å—Ç—É–ø–Ω–æ –Ω–∞ —Ç–∞—Ä–∏—Ñ–µ Premium). –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –µ–º—É –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /ask "–≤–∞—à –∑–∞–ø—Ä–æ—Å" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/ask —Ä–∞—Å—Å–∫–∞–∂–∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –æ –∫–æ—Å–º–æ—Å–µ").

‚ùï–ï—Å–ª–∏ –±–æ—Ç –≤–∞–º –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π /start

–£–¥–∞—á–∏! üöÄ‚ú®                             """, parse_mode="HTML", reply_markup=await main_kb(), disable_web_page_preview=True)
    else:
        await bot.send_message(call.message.chat.id, "–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!", reply_markup=await sub_channels())

@dp.callback_query_handler(lambda call: True)
async def process_call(call: types.CallbackQuery, state: FSMContext):
    action = call.data
    user_id = call.message.chat.id
    await check_user_sub(user_id)
    sub = await db.get_user_info(user_id, "sub")
    voice = await db.get_user_info(user_id, "voice")
    role = await db.get_user_info(user_id, "role_preview")
    voice_model = await db.get_user_info(user_id, "voice_model")
    sub = sub[0]
    role = role[0]
    voice = voice[0]
    voice_model = voice_model[0]


    models = {
    'gpt_3_5_turbo_call': "gpt-3.5-turbo",
    'gpt_3_5_turbo_1106_call': "gpt-3.5-turbo-1106",
    'gpt_3_5_turbo_0613_call': "gpt-3.5-turbo-0613",
    'gpt_3_5_turbo_16k_call': "gpt-3.5-turbo-16k",
    'gpt_3_5_turbo_16k_0613_call': "gpt-3.5-turbo-16k-0613",
    'gpt_3_5_turbo_instruct_call': "gpt-3.5-turbo-instruct",
    'gpt_3_5_turbo_instruct_0914_call': "gpt-3.5-turbo-instruct-0914",
    }

    models_4 = {
    'gpt_4_call': "gpt-4",
    'gpt_4_1106_preview_call': "gpt-4-1106-preview",
    }


    if action in models:
        model_call = models[action]
        await db.set_selected_model(user_id, model_call)
        try:
            await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await gpt_s(None,  model_call))
        except Exception as e:
            pass

    elif action in models_4:
        if sub != "free":
            model_call = models_4[action]
            await db.set_selected_model(user_id, model_call)
            try:
                await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await gpt_s(None,  model_call))
            except Exception as e:
                pass
        elif sub == "free":
            await bot.send_message(user_id, f"–í–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å! –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª—å—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É /premium.")


    role_mapping = {
    "default_role_call": "You helpful assistant",
    "add_role_call": "You advertising expert assistant",
    "hack_role_call": "You crazy, strange, intellectual, creative assistant",
    "seo_role_call": "You SEO specialist assistant",
    "psicho_role_call": "You psychologist assistant",
    "fullstack_role_call": "You full stack developer assistant",
    "codegen_role_call": "You code generator assistant",
    "tech_role_call": "You technical reference assistant",
    "repeater_role_call": "You tutor assistant",
    "news_role_call": "You news aggregator assistant",
    "textred_role_call": "You text editor assistant",
    "creative_role_call": "You creative writer assistant",
    "finance_role_call": "You Financial Consultant assistant",
    "twowords_role_call": "You briefly, in a nutshell assistant",
    }


    if action in role_mapping:
        text = role_mapping[action]
        name = action.split('_')[0]
        await db.set_role(user_id, text)
        await db.set_role_preview(user_id, name)
        try:
            if name in role_disc:
                text_role = role_disc[name]
                await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=f"<b>üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è GPT:</b>\n\n{text_role}", parse_mode="HTML", reply_markup=await roles(name, None, None))
        except Exception as e:
            pass


    if action == "change_role_call":
        user_id = call.message.chat.id
        if role in role_disc:
            text_role = role_disc[role]
            await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text = f"""<b>üë§ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å –¥–ª—è GPT:</b>\n\n{text_role}""", parse_mode="HTML", reply_markup=await roles(None, role, "on"))


    if action == "voice_setting_call":
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="""–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å —Ä–µ–∂–∏–º –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∏ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤.

<b>–ñ–µ–Ω—Å–∫–∏–µ:</b> nova | shimmer
<b>–ú—É–∂—Å–∫–∏–µ:</b> alloy | echo | fable | onyx""", parse_mode="HTML", reply_markup=await choose_voice_model(voice_model, None, voice))

    voice_models = {
    'voice_alloy_call': "alloy",
    'voice_echo_call': "echo",
    'voice_fable_call': "fable",
    'voice_onyx_call': "onyx",
    'voice_nova_call': "nova",
    'voice_shimmer_call': "shimmer",
    }

    if action in voice_models:
        voice_call = voice_models[action]
        await db.set_voice_model(user_id, voice_call)
        try:
            await bot.edit_message_reply_markup(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=await choose_voice_model(None,  voice_call, voice))
        except Exception as e:
            pass


    if action == "voice_check_call":
        media = types.MediaGroup()
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/alloy.mp3'))
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/echo.mp3'))
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/fable.mp3'))
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/nova.mp3'))
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/shimmer.mp3'))
        media.attach_audio(types.InputFile('/path/Chatgpt/audio/onyx.mp3'))
        await bot.send_media_group(call.message.chat.id, media=media)


    if action == "back_call":
        db_context = await db.get_user_info(user_id, "context")
        db_voice = await db.get_user_info(user_id, "voice")
        db_context = db_context[0]
        db_voice = db_voice[0]
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="""–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:

1. –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å <b>GPT</b>
2. –í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å –¥–ª—è <b>ChatGPT</b>
3. –í–∫–ª—é—á–∏—Ç—å –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞. –ö–æ–≥–¥–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∫–ª—é—á–µ–Ω, –±–æ—Ç —É—á–∏—Ç—ã–≤–∞–µ—Ç —Å–≤–æ–π –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞
4. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –≤—ã–±—Ä–∞—Ç—å –≥–æ–ª–æ—Å <b>GPT</b>
(–¥–æ—Å—Ç—É–ø–µ–Ω –≤ /premium)
""", parse_mode="HTML", reply_markup=await settings(db_context, db_voice))


    if action == "photo_back_call":
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="""–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

 –ö–æ–º–∞–Ω–¥—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*", –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è /premium –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.""", reply_markup=await photo_keyboard())


    if action == "photo_help_call":
        await bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="""üåü –ê–Ω–∏–º–µ ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –í–∞—à–µ —Ñ–æ—Ç–æ –≤ –∞–Ω–∏–º–µ.

<b>üß† –†–µ—à–∏—Ç—å —Å—Ä–∞–∑—É</b> ‚Äî —Ä–µ—à–∞–µ—Ç –ª—é–±—ã–µ –∑–∞–¥–∞–Ω–∏–µ, —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–µ –±–∏–ª–µ—Ç—ã –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Ñ–æ—Ç–æ.

<b>üìù –í–≤–æ–¥ –∑–∞–ø—Ä–æ—Å–∞</b> ‚Äî –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–≤–µ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞–¥–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–∞ —Ñ–æ—Ç–æ.

<b>üïµÔ∏è‚Äç –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å</b> ‚Äî —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–æ—Ç–æ.

<b>üö´ –£–¥–∞–ª–∏—Ç—å —Ñ–æ–Ω</b> ‚Äî —É–¥–∞–ª—è–µ—Ç —Ñ–æ–Ω –Ω–∞ —Ñ–æ—Ç–æ.

<b>üîÑ –ó–∞–º–µ–Ω–∏—Ç—å —Ñ–æ–Ω</b> ‚Äî –∑–∞–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–æ–Ω –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –í–∞–º–∏.

<b>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç</b> ‚Äî —É–¥–∞–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–æ—Ç–æ.

<b>üîç–°—É–ø–µ—Ä-—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ</b> ‚Äî —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Ñ–æ—Ç–æ –≤ 4 —Ä–∞–∑–∞.

<b>üåê GPT-4 Vision</b> ‚Äî –∑—Ä–µ–Ω–∏–µ –ò–ò, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ñ–æ—Ç–æ –∏ –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ –Ω–∞ –Ω–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ.""", parse_mode="HTML", reply_markup=await photo_back_keyboard(None))


@dp.message_handler(commands=['img'])
async def command_image(message: types.Message):
	username = message.from_user.first_name
	if await check_subscription(CHANNEL_ID, message.chat.id):
		text = message.text
		user_id = message.chat.id
		await check_user_sub(user_id)
		last_chat_id = message.message_id
		request_dalle = await db.get_user_info(user_id, "request_dalle")
		request_dalle = request_dalle[0]
		sub = await db.get_user_info(user_id, "sub")
		sub = sub[0]
		if sub == "free":
			dalle_model = "dall-e-2"
		elif sub != "free":
			dalle_model = "dall-e-3"
		await dalle_response(user_id, request_dalle, text, dalle_model, last_chat_id)
	else:
		await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def process_getting_answer(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        await check_user_sub(user_id)
        last_chat_id = message.message_id
        photo = message.photo
        history = await db.get_user_info(user_id, "history")
        context = await db.get_user_info(user_id, "context")
        voice = await db.get_user_info(user_id, "voice")
        role = await db.get_user_info(user_id, "role")
        model = await db.get_user_info(user_id, "selected_model")
        sub = await db.get_user_info(user_id, "sub")
        voice_model = await db.get_user_info(user_id, "voice_model")
        history = history[0]
        context = context[0]
        voice = voice[0]
        role = role[0]
        model = model[0]
        sub = sub[0]
        voice_model = voice_model[0]

        if context == "on":
            text = (history or "") + message.text
        elif context == "off":
            text = message.text
        if model == "gpt-3.5-turbo-instruct" or model == "gpt-3.5-turbo-instruct-0914":
            text = message.text

        if voice == "on":
            text = message.text
            await voice_answer(user_id, voice_model, text)
        elif voice == "off":
            await gpt_answer(user_id, text, model, sub, role, last_chat_id)

    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())

@dp.message_handler(content_types=types.ContentTypes.PHOTO)
async def handle_photo(message: types.Message):
    username = message.from_user.first_name
    if await check_subscription(CHANNEL_ID, message.chat.id):
        user_id = message.chat.id
        await check_user_sub(user_id)
        await bot.send_message(user_id, """–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

–ö–æ–º–∞–Ω–¥—ã, –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ "*", –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è /premium –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.""", reply_to_message_id=message.message_id , reply_markup=await photo_keyboard())

        photo = await bot.get_file(message.photo[-1].file_id)
        url = f'https://api.telegram.org/file/bot{TG_BOT_TOKEN}/{photo.file_path}'
        await db.set_photo_url(user_id, url)
        photo_data = await bot.download_file(photo.file_path)
        with open(f'/path/Chatgpt/photos/photo_{message.chat.id}.png', 'wb') as photo_file:
            photo_file.write(photo_data.read())

    else:
        await bot.send_message(message.chat.id, f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—åüëá", reply_markup=await sub_channels())


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)






